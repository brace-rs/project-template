name: CI

on:
  pull_request:
  push:
    branches:
    - main

jobs:
  build:
    name: Build / ${{ matrix.label }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
        - label: Linux
          target: x86_64-unknown-linux-gnu
          toolchain: stable
          os: ubuntu-latest

        - label: macOS
          target: x86_64-apple-darwin
          toolchain: stable
          os: macos-latest

        - label: Windows
          target: x86_64-pc-windows-gnu
          toolchain: stable
          os: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup
      uses: dtolnay/rust-toolchain@master
      with:
        targets: ${{ matrix.target }}
        toolchain: ${{ matrix.toolchain }}

    - name: Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.toolchain }}-debug

    - name: Build
      run: cargo build --target ${{ matrix.target }}
      shell: bash

  test:
    name: Test / ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    needs: build

    strategy:
      matrix:
        include:
        - label: Linux
          target: x86_64-unknown-linux-gnu
          toolchain: stable
          os: ubuntu-latest

        - label: macOS
          target: x86_64-apple-darwin
          toolchain: stable
          os: macos-latest

        - label: Windows
          target: x86_64-pc-windows-gnu
          toolchain: stable
          os: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup
      uses: dtolnay/rust-toolchain@master
      with:
        targets: ${{ matrix.target }}
        toolchain: ${{ matrix.toolchain }}

    - name: Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.toolchain }}-debug

    - name: Test
      run: cargo test --target ${{ matrix.target }}
      shell: bash

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'pull_request' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup
      uses: dtolnay/rust-toolchain@master
      with:
        targets: x86_64-unknown-linux-gnu
        toolchain: stable

    - name: Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ubuntu-latest-x86_64-unknown-linux-gnu-stable-debug

    - name: Rustfmt
      run: cargo fmt -- --check
      shell: bash

    - name: Clippy
      run: cargo clippy -- -D warnings
      shell: bash

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup
      uses: dtolnay/rust-toolchain@master
      with:
        targets: x86_64-unknown-linux-gnu
        toolchain: stable

    - name: Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ubuntu-latest-x86_64-unknown-linux-gnu-stable-debug

    - name: Install
      uses: taiki-e/install-action@v1
      with:
        tool: cargo-tarpaulin

    - name: Generate
      run: cargo tarpaulin --ignore-tests --out Xml
      shell: bash

    - name: Upload
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
