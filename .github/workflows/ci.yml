name: CI

on:
  pull_request:
  push:
    branches:
    - main

jobs:
  test:
    name: Test (${{ matrix.label }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
        - label: linux
          target: x86_64-unknown-linux-gnu
          toolchain: stable
          os: ubuntu-latest
          coverage: true

        - label: macos
          target: x86_64-apple-darwin
          toolchain: stable
          os: macos-latest
          coverage: false

        - label: windows
          target: x86_64-pc-windows-msvc
          toolchain: stable
          os: windows-latest
          coverage: false

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup
      uses: dtolnay/rust-toolchain@master
      with:
        targets: ${{ matrix.target }}
        toolchain: ${{ matrix.toolchain }}

    - name: Install Tarpaulin
      if: matrix.coverage
      uses: taiki-e/install-action@v1
      with:
        tool: cargo-tarpaulin

    - name: Cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.coverage }}

    - name: Test
      if: '!matrix.coverage'
      run: cargo test --target ${{ matrix.target }}
      shell: bash

    - name: Test (Coverage)
      if: matrix.coverage
      run: cargo tarpaulin --target ${{ matrix.target }} --skip-clean --out Xml
      shell: bash

    - name: Upload Coverage
      if: matrix.coverage
      uses: codecov/codecov-action@v3
      with:
        flags: ${{ matrix.label }}
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup
      uses: dtolnay/rust-toolchain@master
      with:
        targets: x86_64-unknown-linux-gnu
        toolchain: stable
        components: clippy, rustfmt

    - name: Cache
      uses: Swatinem/rust-cache@v2

    - name: Rustfmt
      run: cargo fmt -- --check
      shell: bash

    - name: Clippy
      run: cargo clippy -- -D warnings
      shell: bash
